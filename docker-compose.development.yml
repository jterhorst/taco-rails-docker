version: '3.3'
services:

  # webpack hmr works in Docker with this:
  # https://github.com/AirWick219/react-rails-hmr-docker-example


  # debug with image: yeasy/simple-web:latest

  # https://codewithhugo.com/docker-compose-local-https/

  ## RUNNING...

  # to use the dev env locally, use:
  # docker-compose -f docker-compose.development.yml up
  # building a fresh copy just needs `--build` added at the end

  ## TESTS...

  # while it's up and running locally, use these to run tests:
  # docker-compose run -e "RAILS_ENV=test" taco_web rake db:create db:migrate
  # docker-compose run -e "RAILS_ENV=test" taco_web rake test

  taco_db:
    image: postgres:9.6
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_MULTIPLE_DATABASES=taco_dev,taco_test
    restart: on-failure
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

  taco_web:
    build:
      context: .
      dockerfile: web.Dockerfile
    image: jterhorst/taco-rails
    # image: yeasy/simple-web:latest
    command: "bundle exec foreman start -f Procfile.dev"
    volumes:
      - web-project:/web
    # Required for debug breakpoints
    tty: true
    stdin_open: true
    environment:
      - WEBPACKER_DEV_SERVER_HOST=0.0.0.0
      - VIRTUAL_HOST=taco.docker
      - VIRTUAL_PORT=8080
      - POSTGRES_HOST
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - NODE_ENV=development
      - RAILS_ENV=development
      - MASTER_KEY
      - RAILS_MASTER_KEY
    ports: 
      - "8080:8080"
      - "3035:3035"
    depends_on:
      - taco_db
    restart: on-failure
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

  taco_worker:
    build:
      context: .
      dockerfile: web.Dockerfile
    image: jterhorst/taco-rails
    command: "bundle exec bin/rake jobs:work"
    volumes:
      - web-project:/web
    environment:
      - NODE_ENV=development
      - RAILS_ENV=development
      - POSTGRES_HOST
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - MASTER_KEY
      - RAILS_MASTER_KEY
    depends_on:
      - taco_db
    restart: on-failure
    deploy:
      mode: replicated
      replicas: 5
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]

  proxy:
    image: jwilder/nginx-proxy:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - taco_web
    restart: unless-stopped

  docker-host:
    image: qoomon/docker-host
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    restart: on-failure

volumes:
  pg-data:
  web-project:
    driver: local
    driver_opts:
      type: none
      device: $PWD
      o: bind
